Schedule AppointmentsF


Public AppointmentExists As Boolean
Public CheckBy As Boolean
Public SentList As String
Public emailList As String
Public nameList As String
Public NewNumber As String
'Public AppointmentChanged As Boolean
'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------'
'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------'
'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------'



        '------------------------------------------------------------'
        ' Table Of Contents:                                         '
        '                                                            '
        ' Section 1: Formatting the Form Load                        '
        ' Section 2: Updating Appointment Series Number              '
        ' Section 3: Formatting Appointment Time and Duration        '
        ' Section 4: Microsoft Outlook Appointment Buttons           '
        ' Section 5: Microsoft Access Appointment Buttons            '
        ' Section 6: Sending Out Reminders                           '
        ' Section 7: Check if Study Location Exists in Database and  '
        '            if not, Advise Adding New Location              '
        '                                                            '
        '------------------------------------------------------------'
        
        
'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------'
'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------'
'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------'

        '------------------------------------------------------------'
        ' Section 1: Formatting the Form Load                        '
        '                                                            '
        '------------------------------------------------------------'


Private Sub Form_Load()

If txtEMail.value = "" Then

    txtEMail.value = "No E-mail Address"
    
End If

End Sub


'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------'
'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------'
'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------'

        '------------------------------------------------------------'
        ' Section 2: Updating Appointment Series Number              '
        '                                                            '
        '------------------------------------------------------------'
        
        
Private Sub lstCancel_AfterUpdate()

If lstCancel.value = "Cancelled" Then

    txtNthAppt.value = 0
    
End If

If IsNull(lstCancel) Then

    Dim db As DAO.Database
    Dim rst As DAO.Recordset
    Dim strSQL As String
    Dim strText As String
    Dim dtDate As Date
    Dim intCount As Integer


    strText = Me.txtSubject.value
    dtDate = Me.DteAppointmentStart.value

    ' Build the SQL query to count the occurrences of the text value
    strSQL = "SELECT Count(*) AS CountOfText FROM AppointmentT " & _
             "WHERE [Subject] = '" & strText & "' " & _
             "AND [Appointment Start] < #" & dtDate & "#" & _
             "AND (IsNull(Cancelled));"

    ' Execute the query and retrieve the count value
    Set db = CurrentDb
    Set rst = db.OpenRecordset(strSQL)
    intCount = rst("CountOfText")

    ' Update the second textbox with the count value
    Me.txtNthAppt.value = intCount + 1

    rst.Close
    Set rst = Nothing
    Set db = Nothing

    Me.txtNthAppt.value = intCount + 1
    
End If

End Sub
        
Private Sub Form_Close()

If CurrentProject.AllForms("AppointmentF").IsLoaded Then

    If CurrentProject.AllForms("AppointmentF").CurrentView = acCurViewFormBrowse Then
    
        Application.Echo False
        
            On Error Resume Next
        
            If (MacroError <> 0) Then
            
                Beep
                MsgBox MacroError.Description, vbOKOnly, ""
                
            End If
            
            Subject = txtStudyID.value & " " & txtStudy.value
        
            Dim rs As DAO.Recordset
            Dim Count As Integer
        
            'Create a recordset of the filtered form
            Set rs = Forms("AppointmentF").RecordsetClone
            
            'Filter the AppointmentF continuous form by Appointment Start in ascending order
            Forms![AppointmentF].OrderBy = "Appointment Start ASC"
            Forms![AppointmentF].OrderByOn = True
            'Reset the count
            Count = 0
        
            Set rs = Forms("AppointmentF").RecordsetClone
            'Iterate through the recordset
                rs.MoveFirst
                
                Do Until rs.EOF
                
                    'Check if the Subject matches
                    If rs!Subject = Me.txtSubject.value And _
                    rs!Cancelled = "Cancelled" Then
                    
                        'Update the Appointment Series Number
                        rs.Edit
                        rs.fields("Appt Series Number").value = 0
                        rs.Update
                        
                        'Increment the count
                        Count = Count
                        
                    ElseIf rs!Subject = Me.txtSubject.value And _
                    IsNull(rs![Appointment Start]) Then
                    
                        'Update the Appointment Series Number
                        rs.Edit
                        rs.fields("Appt Series Number").value = 0
                        rs.Update
                        
                        'Increment the count
                        Count = Count
                    
                    ElseIf rs!Subject = Me.txtSubject.value Then
                    
                        'Update the Appointment Series Number
                        rs.Edit
                        rs.fields("Appt Series Number").value = Count + 1
                        rs.Update
                        
                        'Increment the count
                        Count = Count + 1
                                                
                    End If
                    
                    'Move to the next record
                    rs.MoveNext
                    
                Loop

            'Close the recordset
            
            rs.Close
            
            Set rs = Nothing
            
            'Remove the filter from the form
            Forms![AppointmentF].OrderBy = "Appointment Start ASC"
            Forms![AppointmentF].OrderByOn = False
            
        Application.Echo True
        
    End If
    
End If

End Sub
        
        
'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------'
'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------'
'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------'

        '------------------------------------------------------------'
        ' Section 3: Formatting Appointment Time and Duration          '
        '                                                            '
        '------------------------------------------------------------'



Private Sub DteAppointmentStart_AfterUpdate()
'
    Dim db As DAO.Database
    Dim rst As DAO.Recordset
    Dim strSQL As String
    Dim strText As String
    Dim dtDate As Date
    Dim intCount As Integer


    strText = Me.txtSubject.value
    dtDate = Me.DteAppointmentStart.value

    ' Build the SQL query to count the occurrences of the text value
    strSQL = "SELECT Count(*) AS CountOfText FROM AppointmentT " & _
             "WHERE [Subject] = '" & strText & "' " & _
             "AND [Appointment Start] < #" & dtDate & "# " & _
             "AND Not [Cancelled] = 'Cancelled';"

    ' Execute the query and retrieve the count value
    Set db = CurrentDb
    Set rst = db.OpenRecordset(strSQL)
    
    intCount = rst("CountOfText")

    ' Update the second textbox with the count value
    Me.txtNthAppt.value = intCount + 1

    rst.Close
    
    Set rst = Nothing
    Set db = Nothing

    Me.txtNthAppt.value = intCount + 1


End Sub


Private Sub AppointmentDuration_AfterUpdate()

    Dim x As Integer
    
    If IsNull(AppointmentDuration.value) Then
    
        MsgBox "Please add Study Duration", vbOK, "Study Duration"
        Exit Sub
        
    End If
    
    x = AppointmentDuration.value
    xMinutes = AppointmentDuration.value * 60
    dteAppointmentEnd.value = DateAdd("n", xMinutes, Me.DteAppointmentStart.value)

End Sub


'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------'
'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------'
'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------'

        '------------------------------------------------------------'
        ' Section 4: Microsoft Outlook Appointment Buttons             '
        '                                                            '
        '------------------------------------------------------------'
        
    
Private Sub DeleteRecordBtn_Click()

Dim strSubject As String

strSubject = CStr([Appointment ID] & [Study ID] & " " & [Study])

Call CheckAppointment(strSubject)

If AppointmentExists = True Then

    If MsgBox("Would you like to Delete the Appointment from Outlook?", vbYesNo, "Delete From Outlook") = vbYes Then
    
        Call DeleteOutlookAppointment(strSubject)
        
    End If
    
Else

    strSubject = CStr([Appointment ID] & [Study ID] & " " & [Study] & " CANCELLED")
    
    Call CheckAppointment(strSubject)
    
    If AppointmentExists = True Then
    
        If MsgBox("Would you like to Delete the Appointment from Outlook?", vbYesNo, "Delete From Outlook") = vbYes Then
        
            Call DeleteOutlookAppointment(strSubject)
            
        End If
        
    End If
    
End If

    Call DeleteTableRecord
    
End Sub

Public Function DeleteOutlookAppointment(strSubject As String)
    Dim objOutlook As Object
    Dim objNameSpace As Object
    Dim objFolder As Object
    Dim objAppointment As Object
    Dim strFilter As String
    Dim OApp As Object
    Dim OFolder As Object
    
    On Error Resume Next
    'Initialize Outlook objects
    Set objOutlook = CreateObject("Outlook.Application")
    Set objNameSpace = objOutlook.GetNamespace("MAPI")
    
    'Set the folder where the appointments are located
    Set objFolder = objNameSpace.GetDefaultFolder(9) '9 represents the calendar folder
    
    'Filter to find the appointment you want to delete
    strFilter = (strSubject) 'Replace with your appointment subject
    
    'Find the appointment
    Set objAppointment = objFolder.Items(strFilter)
    
    PrevSub = objAppointment.Subject
    PrevStart = objAppointment.Start
    
    'Delete the appointment
    If Not objAppointment Is Nothing Then
    
        objAppointment.Delete

        Set OApp = CreateObject("Outlook.Application")
        Set OFolder = OApp.Session.GetDefaultFolder(olFolderCalendar).Folders("[Enter Calendar Name]")
        
        For Each OApptCopy In OFolder.Items

            If OApptCopy.Subject = "Copy: " & PrevSub And OApptCopy.Start = PrevStart Or _
            OApptCopy.Subject = "Copy: " & PrevSub & " CANCELLED" And OApptCopy.Start = PrevStart Or _
            OApptCopy.Subject = PrevSub And OApptCopy.Start = PrevStart Then
            
                OApptCopy.Delete
                
            End If
            
        Next OApptCopy

        'MsgBox "The Appointment has been Deleted from your personal calendar. Please remember to Delete the Appointment from the Shared Calendar.", vbOKOnly, "Delete From Shared Calendar"
    Else
    
        MsgBox "Outlook Appointment not found."
        
    End If
    
    'Clean up objects
    Set objAppointment = Nothing
    Set objFolder = Nothing
    Set objNameSpace = Nothing
    Set objOutlook = Nothing

End Function

Private Function DeleteTableRecord()

On Error GoTo DeleteRecordBtn_Click_Err

    On Error Resume Next
    
    DoCmd.GoToControl Screen.PreviousControl.Name
    Err.Clear
    
    If (Not Form.NewRecord) Then
    
        DoCmd.RunCommand acCmdDeleteRecord
        
    End If
    
    If (Form.NewRecord And Not Form.Dirty) Then
    
        Beep
        
    End If
    
    If (Form.NewRecord And Form.Dirty) Then
    
        DoCmd.RunCommand acCmdUndo
        
    End If
    
    If (MacroError <> 0) Then
    
        Beep
        MsgBox MacroError.Description, vbOKOnly, ""
        
    End If

    If Forms![AppointmentF].Exists Then
    
        Forms![AppointmentF].Requery
        
    End If

    MsgBox "Microsoft Access Record Deleted"
    DoCmd.Close acForm, "Schedule AppointmentF"

DeleteRecordBtn_Click_Exit:

    Exit Function

DeleteRecordBtn_Click_Err:

    MsgBox Error$
    Resume DeleteRecordBtn_Click_Exit

End Function


'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------'
'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------'
'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------'

        '------------------------------------------------------------'
        ' Section 5: Appointment Buttons                             '
        '                                                            '
        '------------------------------------------------------------'
        
        
Private Sub SaveAppointmentbtn_Click()

If IsNull(DteAppointmentStart.value) Or IsNull(dteAppointmentEnd.value) Then

    MsgBox "There is missing information. In order to save, the Appointment Start and Appointment End must be documented.", vbOK, "Incomplete Record"
    Exit Sub
    
End If

Dim strSubject As String

strSubject = CStr([Appointment ID] & [Study ID] & " " & [Study])

If lstCancel.value = "Cancelled" Then
    
    Dim rs As DAO.Recordset
    Dim db As DAO.Database
    
    Set db = CurrentDb()
    Set rs = db.OpenRecordset("SELECT * FROM StudiesT WHERE [Study ID] = int('" & Me.txtStudyID.value & "')" & "AND [Study] ='" & Me.txtStudy.value & "'")
    
    If Not rs.EOF Then
        rs.MoveFirst
        Do While Not rs.EOF
            If rs![Appointment Start] = DteAppointmentStart.value Then
                rs.Edit
                rs![Outcome] = "Cancelled"
                rs.Update
            End If
            rs.MoveNext
        Loop
    End If
    
    Set rs = Nothing
    Set db = Nothing
    
    Call CheckAppointment(strSubject)
    
    If AppointmentExists = True Then
    
        If MsgBox("This Meeting has been Cancelled. Would you like to delete the Appointment from the Outlook Calendar?", vbYesNo, "Delete From Outlook Calendar") = vbYes Then
            
            Call DeleteOutlookAppointment(strSubject)
            
        Else

            Call SaveUpdateAppointment
            
        End If
        
    Else
    
        If MsgBox("This Meeting has been Cancelled. Would you still like to Schedule the Appointment on the Outlook Calendar as a Cancelled Appointment?", vbYesNo, _
        "Cancelled Appointment") = vbYes Then
        
            Call ScheduleOutlookAppt
            
        End If
        
    End If
    
Else

    Call SaveUpdateAppointment
    
End If
 
 'DoCmd.Close acForm, "Schedule AppointmentF"
End Sub
    
Private Sub AddNextAppointment_Click()

If IsNull(DteAppointmentStart.value) Or IsNull(dteAppointmentEnd.value) Then

    MsgBox "There is missing information. In order to save, the Appointment Start and Appointment End must be documented.", vbOK, "Incomplete Record"
    Exit Sub
    
End If

Dim strSubject As String

strSubject = CStr([Appointment ID] & [Study ID] & " " & [Study])

If Me.Dirty Then

    If lstCancel.value = "Cancelled" Then
    
        Call CheckAppointment(strSubject)
        
        If AppointmentExists = True Then
        
            If MsgBox("This Meeting has been Cancelled. Would you like to delete the Appointment from the Outlook Calendar?", vbYesNo, "Delete From Outlook Calendar") = vbYes Then
                
                Call DeleteOutlookAppointment(strSubject)
                
            Else
            
                Call SaveUpdateAppointment
                
            End If
            
        Else
        
            strSubject = CStr([Appointment ID] & [Study ID] & " " & [Study]) & " CANCELLED"
            
            Call CheckAppointment(strSubject)
            
                If AppointmentExists = True Then
                
                    If MsgBox("This Meeting has been Cancelled. Would you like to delete the Appointment from the Outlook Calendar?", vbYesNo, "Delete From Outlook Calendar") = vbYes Then
                        
                        Call DeleteOutlookAppointment(strSubject)
                        
                    Else
                    
                        Call SaveUpdateAppointment
                        
                    End If
                    
                Else
                    
                    MsgBox ("This Meeting has been Cancelled. It will not be Scheduled in Outlook.")
                    
                End If
        End If
        
    Else
    
        Call SaveUpdateAppointment
        
    End If
    
End If

Call AddAppointment

End Sub

Private Function AddAppointment()

Dim CopyStudyID As Integer
Dim CopyFirstName As String
Dim CopyLastName As String
Dim CopyStudy As String
Dim CopyLocation As String
Dim CopySubject As String
Dim CopyEmail As String

    On Error Resume Next

    CopyStudyID = txtStudyID.value
    CopyFirstName = txtFirstName.value
    CopyLastName = txtLastName.value
    CopyStudy = txtStudy.value
    CopyLocation = txtLocation.value
    CopySubject = txtSubject.value
    CopyEmail = txtEMail.value
    CopyNthAppt = txtNthAppt.value
    

    
    DoCmd.GoToRecord , "", acNewRec

    Me.txtStudyID.value = CopyStudyID
    Me.txtFirstName.value = CopyFirstName
    Me.txtLastName.value = CopyLastName
    Me.txtStudy.value = CopyStudy
    Me.txtLocation.value = CopyLocation
    Me.AppointmentDuration = ""
    Me.txtSubject.value = CopySubject
    Me.txtEMail.value = CopyEmail
    Me.txtNthAppt.value = CopyNthAppt + 1
    
    If Forms![AppointmentF].Exists Then
    
        Forms![AppointmentF].Requery
        
    End If
    
    If (MacroError <> 0) Then
    
        Beep
        MsgBox MacroError.Description, vbOKOnly, ""
        
    End If

    DoCmd.Save
    
'    Dim rs As DAO.Recordset
'    Dim db As DAO.Database
'
'    Set db = CurrentDb()
'    Set rs = db.OpenRecordset("SELECT * FROM StudiesT WHERE [Study ID] = int('" & CopyStudyID & "') AND " & _
'                                                            "[Study] ='" & CopyStudy & "') AND " & _
'                                                            "[Appointment ID] ='" & Me.txtAppointmentID.value & "'")
'
'    If rs.EOF And rs.BOF Then
'
'        rs.AddNew
'        rs.Edit
'        rs![Study ID] = CopyStudyID
'        rs![Study] = CopyStudy
'        rs![First Name] = CopyFirstName
'        rs![Last Name] = CopyLastName
'        rs![Appointment ID] = Me.txtAppointmentID.value
'        rs.Update
'
'    Else:
'
        
    
    
AddNextAppointment_Click_Exit:

    Exit Function

AddNextAppointment_Click_Err:

    MsgBox Error$
    Resume AddNextAppointment_Click_Exit

End Function

Private Function SaveUpdateAppointment()
Dim strSubject As String

'DoCmd.Close acForm, "Schedule AppointmentF"
    If CurrentProject.AllForms("AppointmentF").IsLoaded Then 'Forms![AppointmentF].Exists Then
    
        Forms("AppointmentF").Requery 'Forms![AppointmentF].Requery
        
    End If
    
    strSubject = txtAppointmentID & txtStudyID & " " & txtStudy

    Call CheckAppointment(strSubject)
    
    If Me.Dirty Then
        
        If MsgBox("Would you like to add/edit this appointment in Outlook?", vbYesNo, "Outlook Appointment") = vbYes Then
    
            If AppointmentExists Then
            
                Call Edit_Appointment
                
            Else
            
                strSubject = txtAppointmentID & txtStudyID & " " & txtStudy & " CANCELLED"
                Call CheckAppointment(strSubject)
                
                If AppointmentExists Then
                
                    Call Edit_Appointment
                    
                Else
                
                    If lstCancel.value = "Cancelled" Then
                    
                        MsgBox "'Cancelled'" & " has been selected. The meeting will not be Scheduled on the Outlook Calendar."
                        
                    Else
                    
                        strSubject = txtAppointmentID & txtStudyID & " " & txtStudy
                        Call ScheduleOutlookAppt
    
                    End If
                    
                End If
                
            End If
        
        End If
        
    End If
    
    DoCmd.RunCommand acCmdSaveRecord
    DoCmd.Close acForm, "Schedule AppointmentF"

End Function
    
Private Function CheckAppointment(strSubject As String)

    Dim olApp As Outlook.Application
    Dim olNS As Outlook.NameSpace
    Dim olFolder As Outlook.MAPIFolder
    Dim olApt As Outlook.AppointmentItem
    Dim strFilter As String
    Dim dtStart As Date
    Dim dtEnd As Date

    'Specify the start and end dates for the appointment search
    dtStart = Date - 30
    dtEnd = DateAdd("d", 365, Date)

    'Specify the filter for the appointment search
    strFilter = "[Start] >= '" & dtStart & "' AND [End] <= '" & dtEnd & "' AND [Subject] = '" & strSubject & "'"

    Set olApp = New Outlook.Application
    Set olNS = olApp.GetNamespace("MAPI")
    Set olFolder = olNS.GetDefaultFolder(olFolderCalendar)
    Set olApt = olFolder.Items.Find(strFilter)

    If Not olApt Is Nothing Then
    
        AppointmentExists = True
    
    Else
    
        AppointmentExists = False
      
    End If

    'Clean up the Outlook objects
    Set olApt = Nothing
    Set olFolder = Nothing
    Set olNS = Nothing
    Set olApp = Nothing

End Function

Public Function Edit_Appointment()

 Dim objOutlook As Object
    Dim objNameSpace As Object
    Dim objFolder As Object
    Dim objAppointment As Object
    Dim OFolder As Object
    Dim strFilter As String
    Dim NewAppointment As Outlook.AppointmentItem
    Dim bDisplayToUser As Boolean
    bDisplayToUser = False

    'Create Outlook application object
    Set objOutlook = CreateObject("Outlook.Application")
    Set objNameSpace = objOutlook.GetNamespace("MAPI")

    'Get the calendar folder
    Set objFolder = objNameSpace.GetDefaultFolder(9)

    strFilter = CStr([Appointment ID] & [Study ID] & " " & [Study])

    'Get the appointment to be edited
    On Error Resume Next
    Set objAppointment = objFolder.Items(strFilter)
    
    If Error <> 0 Then
        Error.Clear
        Set objAppointment = objFolder.Items(strFilter & " CANCELLED")
    End If
    
    Dim OApptCopy As Outlook.AppointmentItem
    
    Dim PrevSub As String
    Dim PrevStart As Date
    
    PrevStart = objAppointment.Start
    PrevSub = strFilter
    
    Dim strFirstName As String
    Dim strLastName As String
    Dim intStudyID As Integer
    Dim strStudy As String
    Dim strLocation As String
    Dim dteStart As Date
    Dim dteEnd As Date
    Dim AllDayEvent As Boolean
    Dim DisplayToUser As Boolean
    Dim suffix As String
    Dim x As Integer
    Dim OApp As Object
    
    intStudyID = txtStudyID.value
    strFirstName = txtFirstName.value
    strLastName = txtLastName.value
    strStudy = txtStudy.value
    strLocation = txtLocation.value
    dteStart = DteAppointmentStart.value
    dteEnd = dteAppointmentEnd.value
    strNotes = txtNotes.value
    suffix = GetSuffix(x)
    strCancelled = lstCancel.value

    'Make changes to the appointment
    objAppointment.Start = dteStart
    objAppointment.End = dteEnd
    
    If strCancelled = "Cancelled" Then

        objAppointment.Subject = PrevSub & " CANCELLED"
        objAppointment.Body = intStudyID & " " & strStudy & "  Appointment Cancelled."
        objAppointment.Location = "Cancelled"
        
    Else
    
        objAppointment.Subject = PrevSub
        objAppointment.Body = intStudyID & " scheduled for the " & ApptSeriesNum & suffix & " " & strStudy & " Appointment on " _
        & dteStart & vbNewLine & vbNewLine & strNotes
        objAppointment.Location = strLocation
        
    End If

    'Save the changes
    objAppointment.Save
    Set NewAppointment = objAppointment.Copy

    Set OApp = CreateObject("Outlook.Application")
'    Set OFolder = OApp.Session.GetDefaultFolder(olFolderCalendar).Folders("USARMY Ft Bragg MEDCOM WAMC Calendar DVBIC Research")
    Set OFolder = OApp.Session.GetDefaultFolder(olFolderCalendar).Folders("DHA Ft Liberty Womack AMC Calendar MS TBICOE Research")
    
    For Each OApptCopy In OFolder.Items
    
    On Error Resume Next
   
        If OApptCopy.Subject = PrevSub & " CANCELLED" And OApptCopy.Start = PrevStart Or _
        OApptCopy.Subject = PrevSub And OApptCopy.Start = PrevStart Then
        
            OApptCopy.Delete
            
        End If
        
    Next OApptCopy
    
    With NewAppointment
    
        If strCancelled = "Cancelled" Then

            .Subject = PrevSub & " CANCELLED"

        Else
        
            .Subject = PrevSub
            
        End If

        NewAppointmend.Save = True
        NewAppointment.Move OFolder
        
    End With
    
    Set objAppointment = Nothing
    Set objFolder = Nothing
    Set objNameSpace = Nothing
    Set objOutlook = Nothing
    Set OFolder = Nothing
    
Error_Handler_Exit:
    Exit Function

ErrorHandler:
    MsgBox "Error Occurred Updating Outlook Appointment. Check to make sure Outlook Appointment Exists."
    Resume Error_Handler_Exit

End Function

Private Function ScheduleOutlookAppt()

    Dim strFirstName As String
    Dim strLastName As String
    Dim intStudyID As Integer
    Dim intApptID As Integer
    Dim strStudy As String
    Dim strLocation As String
    Dim dteStart As Date
    Dim dteEnd As Date
    Dim ApptSeriesNum As Integer
    Dim AllDayEvent As Boolean
    Dim DisplayToUser As Boolean
    Dim x As Integer
    Dim suffix As String

    intStudyID = txtStudyID.value
    intApptID = txtAppointmentID.value
    strFirstName = txtFirstName.value
    strLastName = txtLastName.value
    strStudy = txtStudy.value
    strLocation = txtLocation.value
    dteStart = DteAppointmentStart.value
    dteEnd = dteAppointmentEnd.value
    strNotes = txtNotes.value
    ApptSeriesNum = txtNthAppt.value
    suffix = GetSuffix(x)

    Call CreateAppointment(intApptID & intStudyID & " " & strStudy, intStudyID & " scheduled for the " & ApptSeriesNum & suffix & " " & strStudy & " Appointment on " _
    & dteStart & vbNewLine & vbNewLine & strNotes, dteStart, dteEnd, False, strLocation)
    
End Function

Private Function GetSuffix(x As Integer) As String

    Dim lastDigit As Integer
    
    x = txtNthAppt.value
    lastDigit = x Mod 10
    
    If x Mod 100 >= 11 And x Mod 100 <= 13 Then
    
        GetSuffix = "th"
        
    Else
    
        Select Case lastDigit
        
            Case 1
            
                GetSuffix = "st"
                
            Case 2
            
                GetSuffix = "nd"
                
            Case 3
            
                GetSuffix = "rd"
                
            Case Else
            
                GetSuffix = "th"
                
        End Select
        
    End If
    
End Function

Private Function CreateAppointment(sSubject As String, _
                                  sBody As String, _
                                  dtStart As Date, _
                                  dtEnd As Date, _
                                  bAllDayEvent As Boolean, _
                                  Optional sLocation As String, _
                                  Optional bDisplayToUser As Boolean = True, _
                                  Optional sCategories As String)
    
    On Error GoTo Error_Handler
    
    #Const EarlyBind = False    'Use Late Binding, No Reference Library Required
    '    #Const EarlyBind = True    'Use Early Binding, Requires Reference Library
    
    #If EarlyBind = True Then
    
        Dim OApp              As Outlook.Application
        Dim OAppt             As Outlook.AppointmentItem
        Dim OFolder As Outlook.Folder
        
    #Else
    
        Dim OApp              As Object
        Dim OAppt             As Object
        Dim OFolder As Object
        Const olAppointmentItem = 1
        
    #End If
    
    Dim bAppOpened            As Boolean

    'Initiate our instance of the oApp object so we can interact with Outlook
    On Error Resume Next
    
    Set OApp = GetObject(, "Outlook.Application")    'Bind to existing instance of Outlook
    
    If Err.Number <> 0 Then    'Could not get instance of Outlook, so create a new one
    
        Err.Clear
        Set OApp = CreateObject("Outlook.Application")
        bAppOpened = False    'Outlook was not already running, we had to start it
        
    Else
    
        bAppOpened = True    'Outlook was already running
        
    End If
    
    On Error GoTo Error_Handler

    'Start creating our Appointment
    Set OAppt = OApp.CreateItem(olAppointmentItem)
    
    With OAppt
        '        .To = ""
        .Start = dtStart
        .End = dtEnd
        .AllDayEvent = bAllDayEvent
        
        If lstCancel.value = "Cancelled" Then
        
            .Subject = sSubject & " CANCELLED"
            .Body = txtStudyID.value & " " & txtStudy.value & "  Appointment Cancelled."
            '.RTFBody = sBody 'If using formatted text
            .Location = "Cancelled"
            
        Else
        
            .Subject = sSubject
            .Body = sBody
            '.RTFBody = sBody 'If using formatted text
            .Location = sLocation
            
        End If
        
        If IsMissing(sCategories) = False Then .Categories = sCategories
        
        If bDisplayToUser = False Then .Display
        .Save
        '        .Send
    End With

'         Set OFolder = OApp.Session.GetDefaultFolder(olFolderCalendar).Folders("USARMY Ft Bragg MEDCOM WAMC Calendar DVBIC Research")
         Set OFolder = OApp.Session.GetDefaultFolder(olFolderCalendar).Folders("DHA Ft Liberty Womack AMC Calendar MS TBICOE Research")
         Dim OApptCopy As Outlook.AppointmentItem
         Set OApptCopy = OAppt.Copy
         OApptCopy.Move OFolder
    
    'If our code started Outlook, we should close it now that we're done
    If bAppOpened = False Then
    
        OApp.Quit    'There seems to be a delay in this action taking place, but does eventually take place
        
    End If

Error_Handler_Exit:

    On Error Resume Next
    If Not OAppt Is Nothing Then Set OAppt = Nothing
    If Not OApp Is Nothing Then Set OApp = Nothing
    Exit Function

Error_Handler:

    MsgBox "The following error has occurred" & vbCrLf & vbCrLf & _
           "Error Number: " & Err.Number & vbCrLf & _
           "Error Source: CreateAppointment" & vbCrLf & _
           "Error Description: " & Err.Description & _
           Switch(Erl = 0, "", Erl <> 0, vbCrLf & "Line No: " & Erl), _
           vbOKOnly + vbCritical, "An Error has Occurred!"
           
    Resume Error_Handler_Exit

End Function


'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------'
'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------'
'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------'

        '------------------------------------------------------------'
        ' Section 6: Send Out Reminders                              '
        '                                                            '
        '------------------------------------------------------------'

Private Sub SendReminderBtn_Click()

    AppointmentID = txtAppointmentID.value

    DoCmd.RunCommand acCmdSaveRecord
    
    RecordSetLoop AppointmentID
    
'    If SysCmd(acSysCmdGetObjectState, acForm, "AppointmentF") = acObjStateOpen Then

    Forms![AppointmentF].Requery
    
'    End If

End Sub

Private Sub RecordSetLoop(AppointmentID)

    Dim rs As DAO.Recordset
    Dim db As DAO.Database
    Dim apptDate As Date
    
    Set db = CurrentDb()
    Set rs = db.OpenRecordset("AppointmentT")

    nameList = ""
    emailList = ""
    SentList = ""

    If IsNull(Me.ComboSigBlockUser.value) Then
    
        MsgBox "Please Select a User for Signature Block"
        Exit Sub
        
    End If
    
    If IsNull(Me.txtStudy.value) Then

        MsgBox "Please Select a Study for Reminder"
        Exit Sub
        
    End If

    rs.MoveFirst
    
    Do While Not rs.EOF
    
        If Not rs![Appt Series Number] = 0 Then
        
            If Not IsNull(rs![Appointment Start]) Then
            
                If rs![Appointment ID] = AppointmentID Then
                    
                    If rs![Appointment Start] < DateAdd("d", 7, Date) And rs![Appointment Start] > DateAdd("d", 3, Date) Then
                    
                        If Not IsNull(rs.fields("1 Week Reminder")) Then
                    
                            If MsgBox("A 1 Week Reminder has already been sent out. Would you like to send out another Reminder?", vbYesNo) = vbNo Then
                            
                                Exit Sub
                                
                            ElseIf Not IsNull(rs.fields("Other Reminder")) Then
                            
                                If MsgBox("An Other Reminder has already been sent out. Would you like to send out another Reminder?", vbYesNo) = vbNo Then
                                
                                    Exit Sub
                                    
                                End If
                                
                            End If
                            
                        End If
                    
                    ElseIf rs![Appointment Start] < DateAdd("d", 3, Date) And rs![Appointment Start] > DateAdd("h", 36, Date) Then
                    
                        If Not IsNull(rs.fields("3 Day Reminder")) Then
                    
                            If MsgBox("A 3 Week Reminder has already been sent out. Would you like to send out another Reminder?", vbYesNo) = vbNo Then
                            
                                Exit Sub
                                
                            ElseIf Not IsNull(rs.fields("Other Reminder")) Then
                            
                                If MsgBox("An Other Reminder has already been sent out. Would you like to send out another Reminder?", vbYesNo) = vbNo Then
                                
                                    Exit Sub
                                
                                End If
                                
                            End If
                        
                        End If
                    
                    ElseIf rs![Appointment Start] <= DateAdd("h", 36, Date) Then
                    
                        If Not IsNull(rs.fields("1 Day Reminder")) Then
                    
                            If MsgBox("A 1 Day Reminder has already been sent out. Would you like to send out another Reminder?", vbYesNo) = vbNo Then
                            
                                Exit Sub
                                
                            ElseIf Not IsNull(rs.fields("Other Reminder")) Then
                            
                                If MsgBox("An Other Reminder has already been sent out. Would you like to send out another Reminder?", vbYesNo) = vbNo Then
                                
                                    Exit Sub
                                    
                                End If
                                
                            End If
                            
                        End If
                    
                    End If
                    
                    apptDate = rs![Appointment Start]
                    selectedStudy = Me.txtStudy.value
                    nameList = txtFirstName.value & " " & txtLastName.value
                    emailList = rs![E-mail]
                    SentList = rs![Appointment ID]
                    GoTo ExitLoop:
                
                End If
                
            End If

        End If
        
        rs.MoveNext

    Loop
    
ExitLoop:

    rs.Close
    Set rs = Nothing
    Set db = Nothing

    ReminderMessage AppointmentID

End Sub


Private Sub ReminderMessage(AppointmentID)

    If Len(emailList) > 0 Then

        SendReminder

        If MsgBox("Enter Today's Date into Reminder Field" & vbCrLf & vbCrLf & _
          "Would you like to mark that the reminder has been sent to " & nameList & "?" & vbCrLf & vbCrLf, vbYesNo + vbQuestion, "Populate Today's Date") = vbYes Then
            
        PopulateReminder AppointmentID

        End If

    Else
    
        MsgBox txtFirstName & " " & txtLastName & " does not have an e-mail address associated with his profile. Add an e-mail address to send a reminder.", vbOKOnly, "No e-mail address found."

    End If
    
End Sub
Sub SendReminder()
'
    Dim db As DAO.Database
    Dim rst As DAO.Recordset
    Dim apptDate As Date
    Dim apptName As String
    Dim apptList As String
    Dim emailMessage As String
    Dim emailSubject As String
    Dim emailTo As String
    Dim emailReminder As Boolean
    Dim olApp As Object
    Dim olMail As Object
    Dim olSig As String
    Dim i As Integer
    Dim Recipient As String
    Dim OpenLocT As Boolean
'    Dim FormExists As Boolean
    
    Set db = CurrentDb()
    Set rst = db.OpenRecordset("AppointmentT")

    rst.MoveFirst
    OpenLocT = False
'    FormExists = False
    Do While Not rst.EOF

        If InStr(SentList, rst("Appointment ID")) > 0 Then

                selectedUser = Me.ComboSigBlockUser.value
                selectedLocation = rst("Location")
                selectedStudy = rst("Study")

                Dim rs3 As DAO.Recordset
                Set rs3 = CurrentDb.OpenRecordset("SELECT * FROM [Users] WHERE [User] = '" & selectedUser & "'")

                selectedSignature = rs3![SignatureBlock]
                
'                If SysCmd(acSysCmdGetObjectState, acForm, "AppointmentF") <> acObjStateOpen Then
'                    DoCmd.OpenForm "AppointmentF"
'                    FormExists = True
'                End If
                
                RCPhoneNumber = Forms("AppointmentF").Controls("RCPhone").value
                TBICoEPhoneNumber = Forms("AppointmentF").Controls("TBICoEMainPhone").value

                Set rs3 = Nothing
                
                Dim rs5 As DAO.Recordset
                Set rs5 = CurrentDb.OpenRecordset("SELECT * FROM [StudyReminderInfoT] WHERE [Study] = '" & selectedStudy & "'")
                
                RecordCount = DCount("*", "StudyReminderInfoT", "Study = '" & selectedStudy & "'")
                
                If RecordCount > 0 Then

                    If Len(rs5![Reminder Info]) > 1 And _
                    Not rs5![Reminder Info] = "" And _
                    Not rs5![Reminder Info] = " " And _
                    Not rs5![Reminder Info] = "N/A" And _
                    Not rs5![Reminder Info] = "n/a" And _
                    Not rs5![Reminder Info] = "N/a" And _
                    Not rs5![Reminder Info] = "None" And _
                    Not rs5![Reminder Info] = "NONE" And _
                    Not rs5![Reminder Info] = "If no Reminder Info, leave blank" And _
                    Not rs5![Reminder Info] = "none" Then
                        studyreminders = "Please Remember: " & "<br>" & rs5![Reminder Info] & "<br><br>"
                        
                    Else:
                        studyreminders = ""
                    End If
                Else
                    studyreminders = ""
                End If

                Dim rs4 As DAO.Recordset
                Set rs4 = CurrentDb.OpenRecordset("SELECT * From [LocationsT] WHERE [Abbreviation] = '" & selectedLocation & "'")

                If IsNull(DLookup("[Location]", "LocationsT", "[Abbreviation] = '" & selectedLocation & "'")) Then

                    If MsgBox("No Study Location Found for Participant. Would you like to Add Study Location and then send a new Reminder?", _
                    vbYesNo, "No Study Location Found") = vbYes Then
                    
                        MsgBox "Reminder will not be sent to " & rst("First Name") & " " & rst("Last Name")
                        SentList = Replace(SentList, rst("Appointment ID") & ";", "")
                        nameList = Replace(nameList, rst![First Name] & " " & rst![Last Name] & vbCrLf, "")
                        OpenLocT = True
                        GoTo NextLoop:
                        
                    Else
                        
                        apptDuration = DateDiff("h", rst("Appointment Start"), rst("Appointment End"))
                        apptDate = rst("Appointment Start")
                        apptName = rst("First Name") & " " & rst("Last Name")
                        emailMessage = "Hello " & apptName & "," & "<br><br>" & "This is a friendly reminder of your appointment on " & Format(apptDate, "Long Date") & " at " & _
                        Format(apptDate, "Long Time") & ". The appointment should last around " & apptDuration & " hours. Please try to arrive 15 minutes before your appointment." & _
                        "<br><br>" & studyreminders & "If you have any questions or concerns, please call: " & "<br><br>" & "Research Coordinator: " & RCPhoneNumber & "<br>" & "TBICoE Main Office: " & TBICoEPhoneNumber & _
                        "<br><br>" & "We look forward to seeing you!" & "<br><br>" & "Respectfully," & "<br>" & selectedSignature
                        emailSubject = "Reminder: Appointment on " & Format(apptDate, "Long Date")
                        emailTo = rst("E-mail")
    
                        Set rs4 = Nothing
                        GoTo NoLocation:
                        
                    End If

                End If
                
                messageLocation = rs4![Location]

                If IsNull(DLookup("[Abbreviation]", "LocationsT", "[Abbreviation] = '" & selectedLocation & "'")) Then
                
                    messageAbbreviation = rs4![Location]
                    
                Else:
                
                    messageAbbreviation = rs4![Abbreviation]
                    
                End If

                If IsNull(rs4![Address]) Then
                
                    MsgBox "No address given. Would you like to add an address?", vbYesNo, "No Address"
                    GoTo NoLocation:
                    
                Else:
                
                    messageAddress = rs4![Address]
                    
                End If
                
                    Set rs4 = Nothing
                
                apptDuration = DateDiff("h", rst("Appointment Start"), rst("Appointment End"))
                apptDate = rst("Appointment Start")
                apptName = rst("First Name") & " " & rst("Last Name")
                emailMessage = "Hello " & apptName & "," & "<br><br>" & "This is a friendly reminder of your appointment on " & Format(apptDate, "Long Date") & " at " & _
                Format(apptDate, "Long Time") & ". The appointment should last around " & apptDuration & " hours. Please try to arrive at the " & messageLocation & " 15 minutes before your appointment. The address can be found below." & _
                "<br><br>" & studyreminders & "If you have any questions or concerns, please call: " & "<br><br>" & "Research Coordinator: " & RCPhoneNumber & "<br>" & "TBICoE Main Office: " & TBICoEPhoneNumber & _
                "<br><br>" & "We look forward to seeing you!" & "<br><br>" & messageAbbreviation & " Address: " & "<br>" & messageAddress & "<br><br>" & "Respectfully," & "<br>" & selectedSignature
                emailSubject = "Reminder: Appointment on " & Format(apptDate, "Long Date")
                emailTo = rst("E-mail")
                
NoLocation:

                Set olApp = New Outlook.Application
                Set olMail = olApp.CreateItem(0)

                With olMail
                
                    .Subject = emailSubject
                    .To = emailTo
                    .htmlBody = emailMessage & vbCrLf & vbCrLf
                    .Display
                    
                End With
                
            End If

NextLoop:

        rst.MoveNext
        
    Loop
    
    rst.Close
    db.Close
    
    If OpenLocT = True Then
        DoCmd.OpenForm "LocationsF", acNormal
    End If
    
'    If FormExists Then
'        DoCmd.Close acForm, "AppointmentF"
'    End If
    
End Sub


Sub PopulateReminder(AppointmentID)
    Dim rs As DAO.Recordset
    Dim db As DAO.Database
    Dim nameList As String
    Dim emailList As String


    Set db = CurrentDb()
    Set rs = db.OpenRecordset("AppointmentT")

    rs.MoveFirst
    
    Do While Not rs.EOF
    
        If Not rs![Appt Series Number] = 0 Then

            If InStr(SentList, rs("Appointment ID")) > 0 Then

                    rs.Edit
                    If rs![Appointment Start] > DateAdd("d", 7, Date) Then
                    
                        rs.fields("Other Reminder").value = Date
                    
                    ElseIf rs![Appointment Start] < DateAdd("d", 7, Date) And rs![Appointment Start] > DateAdd("d", 3, Date) Then
                    
                        If Not IsNull(rs.fields("1 Week Reminder")) Then
                    
                            rs.fields("Other Reminder").value = Date
                            
                        Else
                        
                            rs.fields("1 Week Reminder").value = Date
                            
                        End If
                    
                    ElseIf rs![Appointment Start] < DateAdd("d", 3, Date) And rs![Appointment Start] > DateAdd("h", 36, Date) Then
                    
                        If Not IsNull(rs.fields("3 Day Reminder")) Then
                    
                            rs.fields("Other Reminder").value = Date
                            
                        Else
                            
                            rs.fields("3 Day Reminder").value = Date

                        End If
                    
                    ElseIf rs![Appointment Start] <= DateAdd("h", 36, Date) Then
                    
                        If Not IsNull(rs.fields("1 Day Reminder")) Then
                    
                            rs.fields("Other Reminder").value = Date
                        
                        Else
                        
                            rs.fields("1 Day Reminder").value = Date

                        End If
                    
                    End If
                    
                    rs.Update
                    
            End If
            
        End If

        rs.MoveNext

    Loop

    rs.Close
    Set rs = Nothing
    Set db = Nothing

End Sub


'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------'
'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------'
'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------'

        '------------------------------------------------------------'
        ' Section 7: Check if Study Location Exists in Database and  '
        '            if not, Advise Adding New Location              '
        '------------------------------------------------------------'


Private Sub txtLocation_AfterUpdate()
Dim db As Database
Dim rs As Recordset

Set db = CurrentDb()
Set rs = db.OpenRecordset("LocationsT")
       
    rs.MoveFirst
    Dim CheckLoc As Boolean
    CheckLoc = False
    
    Do While Not rs.EOF
    
        If rs("Abbreviation") = Me.txtLocation.value Or _
        rs("Location") = Me.txtLocation.value Then
        
            CheckLoc = True
            Exit Do
            
        End If
        
        rs.MoveNext
        
    Loop
    
    If CheckLoc = False Then
    
        If MsgBox("Location is not found in Locations Table. Would you like to add a new Study Location?", vbYesNo, "New Study Location") = vbYes Then
        
            DoCmd.OpenForm "LocationsF", acNormal
            
        ElseIf MsgBox("The Location value is integral to other Database functions. Would you like to edit the Study Location so that it matches Locations already in the Database?", vbYesNo, "Location Error") = vbYes Then
            
            Exit Sub
            
        End If
        
    End If
    
    rs.Close
    Set rs = Nothing
    Set db = Nothing
    
End Sub
